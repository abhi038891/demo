name: Package and Publish Helm Charts - Manual Trigger

on:
  workflow_dispatch:
    inputs:
      deployment_branch:
        description: 'Branch to deploy charts from'
        required: true
        type: choice
        options:
          - main
          - rel/dev
          - rel/qa
          - rel/prod
        default: main

      hotfix_deployment:
        description: 'Is this a hotfix deployment?'
        required: true
        type: boolean
        default: false

      hotfix_target_environment:
        description: 'Target environment for hotfix (if hotfix is true)'
        required: false
        type: choice
        options:
          - development
          - innovation
        default: innovation

jobs:
  publish-charts:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.deployment_branch }}

      - name: Set matrix for basecharts
        id: set-matrix
        run: |
          folders=$(find basecharts -mindepth 1 -maxdepth 1 -type d | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "matrix=$folders"
          echo "matrix=$folders" >> $GITHUB_OUTPUT

  deploy-hotfix:
    if: ${{ github.event.inputs.hotfix_deployment == 'true' }}
    needs: publish-charts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target-folder: ${{ fromJson(needs.publish-charts.outputs.folders) }}
    steps:
      - name: Echo hotfix target
        run: |
          echo "ðŸš¨ HOTFIX deployment to ${{ github.event.inputs.hotfix_target_environment }}"
          echo "Target chart folder: ${{ matrix.target-folder }}"

  deploy-innovation:
    if: ${{ github.event.inputs.hotfix_deployment != 'true' }}
    needs: publish-charts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target-folder: ${{ fromJson(needs.publish-charts.outputs.folders) }}
    steps:
      - name: Echo innovation target
        run: |
          echo "ðŸš€ Deploying to INNOVATION"
          echo "Target chart folder: ${{ matrix.target-folder }}"

  deploy-development:
    if: ${{ github.event.inputs.hotfix_deployment != 'true' }}
    needs: deploy-innovation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target-folder: ${{ fromJson(needs.publish-charts.outputs.folders) }}
    steps:
      - name: Echo development target
        run: |
          echo "ðŸš€ Deploying to DEVELOPMENT"
          echo "Target chart folder: ${{ matrix.target-folder }}"
